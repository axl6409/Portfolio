// settings - Have a play with these :)
$animation-duration: 6s;
$box-size: 13em;
$cube-opacity: 0.1;
$grid-animation: true;
$grid-squares: 8;
$primary: rgb(54, 226, 248);
$secondary: green; // rgb(209,0,177);



* {
  box-sizing: border-box;
}


.cube_main {
  height: $box-size;
  left: 50%;
  margin-left: -$box-size/2;
  margin-top: -$box-size/2;   
  perspective: 1000px;
  position: absolute;
  top: 65%;
  width: $box-size;
}

.cube_logo {
  width: 100%;
}

cube {
  animation: $animation-duration spin linear infinite;
  height: 100%;
  position: fixed;
  transform-style: preserve-3d;
  width: 100%;
}

cube * /* Each Face */{
  @if $grid-animation == true {
      animation: background 5s linear alternate infinite;
    }
  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0px,
    rgba($primary,0.5) 0%, rgba($primary,0.5) 3px, rgba(0, 0, 0, 0) 0px),
    linear-gradient(90deg, rgba(0, 0, 0, 0) 0px,
    rgba($primary,0.5) 0%, rgba($primary,0.5) 3px, rgba(0, 0, 0, 0) 0px); 
  background-size: $box-size/$grid-squares $box-size/$grid-squares, $box-size/$grid-squares $box-size/$grid-squares;
  background-color:rgba(black,$cube-opacity);
  border: 2px solid rgba($primary, 0.5);
  box-shadow: 0 0 $box-size/4 rgba($secondary,0.6);
  display: block;
  height: $box-size;
  position: absolute;
  width: $box-size;
  
    &:before {
     background: radial-gradient(ellipse at center, rgba(0,0,0,0) 30%, rgba($secondary,0.2) 100%);  
     content: '';
     height: 100%;
     position: absolute;
     width: 100%;
    }
}




back { 
  transform: rotateX(180deg) translateZ($box-size/2); 
}

bottom { 
  transform: rotateX(-90deg) translateZ($box-size/2);
}

front { 
  transform: rotateY(0deg) translateZ($box-size/2);
}

left { 
  transform: rotateY(-90deg) translateZ($box-size/2);
}

right { 
  transform: rotateY(90deg) translateZ($box-size/2);
}

top { 
  transform: rotateX(90deg) translateZ($box-size/2);
}
 
@keyframes background {
  to {
    background-size: $box-size $box-size, $box-size $box-size;
  }
}


@keyframes spin {
  from  {
    transform: translateZ(-$box-size/2) rotateX(0 ) rotateY(  0deg );
  }
  to {
    transform: translateZ(-$box-size/2) rotateX(360deg ) rotateY(360deg );
  }
}